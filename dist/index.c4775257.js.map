{"mappings":"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","sources":["main.js"],"sourcesContent":["const video = document.querySelector(\".webcam\");\r\nconst canvas = document.querySelector(\".video\");\r\nconst ctx = canvas.getContext(\"2d\");\r\nconst faceCanvas = document.querySelector(\".face\");\r\nconst faceCtx = faceCanvas.getContext(\"2d\");\r\nconst faceDetector = new window.FaceDetector();\r\nconst optionsInputs = document.querySelectorAll(\r\n  '.controls input[type=\"range\"]'\r\n);\r\n\r\nconst options = {\r\n  SIZE: 10,\r\n  SCALE: 1.35,\r\n};\r\n\r\nfunction handleOption(event) {\r\n  const { value, name } = event.currentTarget;\r\n  options[name] = parseFloat(value);\r\n}\r\noptionsInputs.forEach((input) => input.addEventListener(\"input\", handleOption));\r\n\r\n// Write a fucntion that will populate the users video\r\nasync function populateVideo() {\r\n  const stream = await navigator.mediaDevices.getUserMedia({\r\n    video: { width: 1280, height: 720 },\r\n  });\r\n  video.srcObject = stream;\r\n  await video.play();\r\n  // size the canvases to be the same size as the video\r\n  console.log(video.videoWidth, video.videoHeight);\r\n  canvas.width = video.videoWidth;\r\n  canvas.height = video.videoHeight;\r\n  faceCanvas.width = video.videoWidth;\r\n  faceCanvas.height = video.videoHeight;\r\n}\r\n\r\nasync function detect() {\r\n  const faces = await faceDetector.detect(video);\r\n  // ask the browser when the next animation frame is, and tell it to run detect for us\r\n  faces.forEach(drawFace);\r\n  faces.forEach(censor);\r\n  requestAnimationFrame(detect);\r\n}\r\n\r\nfunction drawFace(face) {\r\n  const { width, height, top, left } = face.boundingBox;\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  ctx.strokeStyle = \"#ffc600\";\r\n  ctx.lineWidth = 2;\r\n  ctx.strokeRect(left, top, width, height);\r\n}\r\n\r\nfunction censor({ boundingBox: face }) {\r\n  faceCtx.imageSmoothingEnabled = false;\r\n  faceCtx.clearRect(0, 0, faceCanvas.width, faceCanvas.height);\r\n  // draw the small face\r\n  faceCtx.drawImage(\r\n    // 5 source args\r\n    video, // where does the source come from?\r\n    face.x, // where do we start the source pull from?\r\n    face.y,\r\n    face.width,\r\n    face.height,\r\n    // 4 draw args\r\n    face.x, // where should we start drawing the x and y?\r\n    face.y,\r\n    options.SIZE,\r\n    options.SIZE\r\n  );\r\n  // draw the small face back on, but scale up\r\n\r\n  const width = face.width * options.SCALE;\r\n  const height = face.height * options.SCALE;\r\n  faceCtx.drawImage(\r\n    faceCanvas, // source\r\n    face.x, // where do we start the source pull from?\r\n    face.y,\r\n    options.SIZE,\r\n    options.SIZE,\r\n    // Drawing args\r\n    face.x - (width - face.width) / 2,\r\n    face.y - (height - face.height) / 2,\r\n    width,\r\n    height\r\n  );\r\n}\r\n\r\npopulateVideo().then(detect);\r\n"],"names":[],"version":3,"file":"index.c4775257.js.map","sourceRoot":"/__parcel_source_root/"}